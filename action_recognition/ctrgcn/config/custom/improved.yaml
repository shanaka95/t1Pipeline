work_dir: ./work_dir/custom/ctrgcn_improved

# feeder
feeder: feeders.feeder_custom.Feeder
train_feeder_args:
  data_path: data/train
  label_path: data/train_labels.txt
  split: train
  debug: False
  random_choose: True       # Disable temporal sampling (compatibility issue)
  random_shift: True        # Disable temporal shifting (compatibility issue)
  random_move: True         # Disable spatial perturbations (compatibility issue)
  window_size: 64
  normalization: False       # Disable normalization (compatibility issue)
  random_rot: True          # Disable rotation augmentation (compatibility issue)
  p_interval: [0.5, 1]      # Keep probability interval
  vel: False
  bone: False

test_feeder_args:
  data_path: data/test
  label_path: data/test_labels.txt
  split: test
  window_size: 64
  p_interval: [0.95]
  vel: False
  bone: False
  debug: False

# model
model: action_recognition.ctrgcn.model.ctrgcn.Model
model_args:
  num_class: 52
  num_point: 17
  num_person: 1
  graph: action_recognition.ctrgcn.graph.custom_17j.Graph
  graph_args:
    labeling_mode: 'spatial'
  drop_out: 0.5              # Add dropout for regularization

# Model weights (optional)
weights: null                # No pretrained weights
ignore_weights: []           # No weights to ignore

#optim
weight_decay: 0.001          # Increase weight decay for better regularization
base_lr: 0.01               # Reduce initial learning rate
lr_decay_rate: 0.1
step: [40, 60]              # Adjust LR schedule - later decay
warm_up_epoch: 5
optimizer: SGD               # Optimizer type

# training
device: [0]
batch_size: 32              # Reduce batch size for better generalization
test_batch_size: 64
num_epoch: 80               # Increase epochs with early stopping
nesterov: True
start_epoch: 0              # Starting epoch
phase: train                # Training phase
save_score: False           # Don't save prediction scores
seed: 1                     # Random seed
log_interval: 100           # Log every 100 iterations
save_interval: 1            # Save model every epoch
save_epoch: 30              # Start saving after epoch 30
eval_interval: 1            # Evaluate every epoch
print_log: True             # Print logs
show_topk: [1, 5]           # Show top-1 and top-5 accuracy
num_worker: 24              # Number of data loading workers
model_saved_name: ./work_dir/custom/ctrgcn_improved/runs

# Early stopping
early_stopping: True
patience: 10                # Stop if no improvement for 10 epochs
min_delta: 0.001           # Minimum improvement threshold

# Multi-stream training for better generalization
use_joint_stream: True
use_bone_stream: True
use_motion_stream: True

# Label smoothing for regularization
label_smoothing: 0.1

# Additional regularization
gradient_clip: 1.0          # Gradient clipping 